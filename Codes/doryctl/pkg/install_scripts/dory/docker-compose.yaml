version: '3'
services:
  gitea:
    image: {{ $.dory.gitea.image }}
    container_name: gitea
    volumes:
      - ./gitea:/data
    environment:
      USER_UID: 1000
      USER_GID: 1000
      GITEA__database__DB_TYPE: "mysql"
      GITEA__database__HOST: "gitea-mysql:3306"
      GITEA__database__NAME: "gitea"
      GITEA__database__USER: "gitea"
      GITEA__database__PASSWD: "{{ $.dory.gitea.dbPassword }}"
    ports:
      - {{ $.dory.gitea.port }}:3000
    restart: always
    depends_on:
      - gitea-mysql

  gitea-mysql:
    image: {{ $.dory.gitea.imageDB }}
    container_name: gitea-mysql
    volumes:
      - ./gitea-mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "{{ randAlphaNum 16 }}"
      MYSQL_DATABASE: "gitea"
      MYSQL_USER: "gitea"
      MYSQL_PASSWORD: "{{ $.dory.gitea.dbPassword }}"
    command: "--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=268435456"
    restart: always

  nexus:
    image: {{ $.dory.nexus.image }}
    container_name: nexus
    volumes:
      - ./nexus:/nexus-data
    ports:
      - {{ $.dory.nexus.port }}:8081
      - {{ $.dory.nexus.portHub }}:1443
      - {{ $.dory.nexus.portGcr }}:1444
      - {{ $.dory.nexus.portQuay }}:1445
    restart: always

  openldap:
    image: {{ $.dory.openldap.image }}
    container_name: openldap
    volumes:
      - ./openldap/data:/var/lib/ldap
      - ./openldap/config:/etc/ldap/slapd.d
    environment:
      LDAP_ADMIN_PASSWORD: "{{ $.dory.openldap.adminPassword }}"
      LDAP_CONFIG_PASSWORD: "{{ randAlphaNum 16 }}"
      LDAP_DOMAIN: "{{ $.dory.openldap.domain }}"
      LDAP_BASE_DN: "{{ $.dory.openldap.baseDN }}"
      LDAP_TLS_VERIFY_CLIENT: try
    restart: always

  ldapadmin:
    image: {{ $.dory.openldap.imageAdmin }}
    container_name: ldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
    ports:
      - {{ $.dory.openldap.port }}:443
    restart: always
    depends_on:
      - openldap

  redis-core-dory:
    image: {{ $.dory.redis.image }}
    container_name: redis-core-dory
    volumes:
      - ./redis-core-dory:/data
    command: "--appendonly yes --requirepass {{ $.dory.redis.password }}"
    restart: always

  mongo-core-dory:
    image: {{ $.dory.mongo.image }}
    container_name: mongo-core-dory
    volumes:
      - ./mongo-core-dory:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "{{ $.dory.mongo.password }}"
    restart: always

  {{- $list := (repeat $.dory.docker.dockerNumber "x " | trim | split " ") -}}
  {{- range $i, $_ := $list }}
  {{ $.dory.docker.dockerName }}-{{ $i | replace "_" "" }}:
    image: {{ $.dory.docker.image }}
    container_name: {{ $.dory.docker.dockerName }}-{{ $i }}
    hostname: {{ $.dory.docker.dockerName }}-{{ $i }}.{{ $.dory.docker.dockerName }}
    volumes:
      - ./{{ $.dory.docker.dockerName }}/certs:/certs
      - /etc/docker/certs.d/harbor.new.imdory.com/:/etc/docker/certs.d/harbor.new.imdory.com
      - ./{{ $.dory.docker.dockerName }}/daemon.json:/etc/docker/daemon.json
      - ./{{ $.dory.docker.dockerName }}/config.json:/root/.docker/config.json
      - ./dory-core/dory-data:/dory-core/dory-data
    environment:
      DOCKER_TLS_CERTDIR: ""
    command: "--host=tcp://0.0.0.0:2376 --tlsverify --tlscacert=/certs/ca.crt --tlscert=/certs/tls.crt --tlskey=/certs/tls.key"
    extra_hosts:
      - "{{ $.harbor.domainName }}:{{ $.hostIP }}"
    privileged: true
    restart: always
  {{- end }}

#  dory-core:
#    image: alpine:3.15.0
#    container_name: dory-core
#    volumes:
#      - ./dory-core:/dory-core
#      - ./docker/certs:/certs
#    command: "/dory-core/dory-core"
#    working_dir: /dory-core
#    user: "1000:1000"
#    extra_hosts:
#      - "registry.new.imdory.com:10.1.0.2"
#      - "harbor.new.imdory.com:10.2.0.10"
#    restart: always
#    depends_on:
#      - redis-core-dory
#      - mongo-core-dory
#
#  dory-dashboard:
#    image: nginx:1.21.4-alpine
#    container_name: dory-dashboard
#    volumes:
#      - ./dory-dashboard/dist:/usr/share/nginx/html
#      - ./dory-dashboard/nginx/nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - 10010:80
#    restart: always
#    depends_on:
#      - dory-core
