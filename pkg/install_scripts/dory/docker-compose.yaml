version: '3'
services:
  {{- if $.dory.gitRepo.internal.image }}
  {{- if eq $.dory.gitRepo.type "gitea" }}
  {{ $giteaDbPwd := randAlphaNum 16 }}
  {{ $.dory.gitRepo.type }}:
    image: {{ $.dory.gitRepo.internal.image }}
    container_name: {{ $.dory.gitRepo.type }}
    volumes:
      - ./{{ $.dory.gitRepo.type }}:/data
    environment:
      USER_UID: 1000
      USER_GID: 1000
      GITEA__database__DB_TYPE: "mysql"
      GITEA__database__HOST: {{ $.dory.gitRepo.type }}-mysql:3306
      GITEA__database__NAME: {{ $.dory.gitRepo.type | quote }}
      GITEA__database__USER: {{ $.dory.gitRepo.type | quote }}
      GITEA__database__PASSWD: {{ $giteaDbPwd | quote }}
    ports:
      - {{ $.dory.gitRepo.internal.port }}:3000
    restart: always
    depends_on:
      - {{ $.dory.gitRepo.type }}-mysql

  {{ $.dory.gitRepo.type }}-mysql:
    image: {{ $.dory.gitRepo.internal.imageDB }}
    container_name: {{ $.dory.gitRepo.type }}-mysql
    volumes:
      - ./{{ $.dory.gitRepo.type }}-mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: {{ randAlphaNum 16 | quote }}
      MYSQL_DATABASE: {{ $.dory.gitRepo.type | quote }}
      MYSQL_USER: {{ $.dory.gitRepo.type | quote }}
      MYSQL_PASSWORD: {{ $giteaDbPwd | quote }}
    command: "--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=268435456"
    restart: always
  {{- else if eq $.dory.gitRepo.type "gitlab" }}
  {{ $.dory.gitRepo.type }}:
    image: {{ $.dory.gitRepo.internal.image }}
    container_name: {{ $.dory.gitRepo.type }}
    volumes:
      - ./{{ $.dory.gitRepo.type }}/config:/etc/gitlab
      - ./{{ $.dory.gitRepo.type }}/logs:/var/log/gitlab
      - ./{{ $.dory.gitRepo.type }}/data:/var/opt/gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: "nginx['client_max_body_size'] = '0'; gitlab_rails['lfs_enabled'] = true; prometheus_monitoring['enable'] = false;"
    ports:
      - {{ $.dory.gitRepo.internal.port }}:80
    restart: always
  {{- end }}
  {{- end }}

  {{- if $.artifactRepoInternal }}
  {{- if eq $.dory.artifactRepo.type "nexus" }}
  {{ $.dory.artifactRepo.type }}:
    image: {{ $.dory.artifactRepo.internal.image }}
    container_name: {{ $.dory.artifactRepo.type }}
    volumes:
      - ./{{ $.dory.artifactRepo.type }}:/nexus-data
    ports:
      - {{ $.dory.artifactRepo.internal.port }}:8081
      - {{ $.artifactRepoPortHub }}:1443
      - {{ $.artifactRepoPortGcr }}:1444
      - {{ $.artifactRepoPortQuay }}:1445
    restart: always
  {{- end }}
  {{- end }}

  openldap:
    image: {{ $.dory.openldap.image }}
    container_name: openldap
    volumes:
      - ./openldap/data:/var/lib/ldap
      - ./openldap/config:/etc/ldap/slapd.d
    environment:
      LDAP_ADMIN_PASSWORD: {{ $.dory.openldap.password | quote }}
      LDAP_CONFIG_PASSWORD: {{ randAlphaNum 16 | quote }}
      LDAP_DOMAIN: {{ $.dory.openldap.domain | quote }}
      LDAP_BASE_DN: {{ $.dory.openldap.baseDN | quote }}
      LDAP_TLS_VERIFY_CLIENT: try
    restart: always

  ldapadmin:
    image: {{ $.dory.openldap.imageAdmin }}
    container_name: ldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
    ports:
      - {{ $.dory.openldap.port }}:443
    restart: always
    depends_on:
      - openldap

  redis-core-dory:
    image: {{ $.dory.redis.image }}
    container_name: redis-core-dory
    volumes:
      - ./redis-core-dory:/data
    command: "--appendonly yes --requirepass {{ $.dory.redis.password }}"
    restart: always

  mongo-core-dory:
    image: {{ $.dory.mongo.image }}
    container_name: mongo-core-dory
    volumes:
      - ./mongo-core-dory:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: {{ $.dory.mongo.password | quote }}
    restart: always

  {{- $list := (repeat $.dory.docker.dockerNumber "x " | trim | split " ") }}
  {{- range $i, $_ := $list }}
  {{ $idx := ($i | replace "_" "") }}
  {{ $.dory.docker.dockerName }}-{{ $idx }}:
    image: {{ $.dory.docker.image }}
    container_name: {{ $.dory.docker.dockerName }}-{{ $idx }}
    hostname: {{ $.dory.docker.dockerName }}-{{ $idx }}.{{ $.dory.docker.dockerName }}
    volumes:
      - ./{{ $.dory.docker.dockerName }}/certs:/certs
      - /etc/docker/certs.d/{{ $.imageRepoDomainName }}/:/etc/docker/certs.d/{{ $.imageRepoDomainName }}
      - ./{{ $.dory.docker.dockerName }}/daemon.json:/etc/docker/daemon.json
      - ./{{ $.dory.docker.dockerName }}/config.json:/root/.docker/config.json
      - ./dory-core/dory-data:/dory-core/dory-data
    environment:
      DOCKER_TLS_CERTDIR: ""
    command: "--host=tcp://0.0.0.0:2376 --tlsverify --tlscacert=/certs/ca.crt --tlscert=/certs/tls.crt --tlskey=/certs/tls.key"
    extra_hosts:
      - "{{ $.imageRepoDomainName }}:{{ $.imageRepoIp }}"
    privileged: true
    restart: always
  {{- end }}

  dory-core:
    image: doryengine/dory-core:{{ $.versionDoryCore }}-alpine3.15.0
    container_name: dory-core
    volumes:
      - ./dory-core/config:/dory-core/config
      - ./dory-core/dory-data:/dory-core/dory-data
      - ./dory-core/tmp:/dory-core/tmp
      - ./{{ $.dory.docker.dockerName }}/certs:/certs
    command: "/dory-core/dory-core"
    working_dir: /dory-core
    user: "1000:1000"
    extra_hosts:
      - "{{ $.imageRepoDomainName }}:{{ $.imageRepoIp }}"
    restart: always
    depends_on:
      - redis-core-dory
      - mongo-core-dory

  dory-dashboard:
    image: doryengine/dory-dashboard:{{ $.versionDoryDashboard }}
    container_name: dory-dashboard
    ports:
      - {{ $.dory.dorycore.port }}:80
    restart: always
    depends_on:
      - dory-core
