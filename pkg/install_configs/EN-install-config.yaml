# installation mode, options: docker, kubernetes
# docker mode: install dory service with docker-compose
# kubernetes mode: install dory service in kubernetes cluster
{{- if eq $.mode "docker" }}
installMode: docker
{{- else if eq $.mode "kubernetes" }}
installMode: kubernetes
{{- end }}
# all dory components data will write in the root directory (use absolute path)
# if install mode is docker: use this host local path
# if install mode is kubernetes: if kubernetes cluster with multiple nodes, please use shared storage (nfs or cephfs), make sure shared storage is mounted in this host path
{{- if eq $.mode "docker" }}
rootDir: "/data/docker-vols/dory"
{{- else if eq $.mode "kubernetes" }}
rootDir: "/mnt/nfs/k8s-vols/dory"
{{- end }}
# this host ip address, dory use this ip address to connect container image repository and build dependency repository
# if install mode is docker: please use this host ip address, don't use loopback ip address like 127.0.0.1
# if install mode is kubernetes: please use the kubernetes master node ip address (in single master way) or load balancer ip address / virtual ip address (in multiple masters way)
{{- if eq $.mode "docker" }}
hostIP: "10.2.0.10"
{{- else if eq $.mode "kubernetes" }}
hostIP: "10.1.0.2"
{{- end }}
# all dory services view url, please don't include port
# use kubernetes node port or docker expose port to access dory services
viewURL: http://dory.local
# dory services deployment settings
dory:
  # which namespace will dory service deploy in
  # if install mode is docker: it means which subdirectory dory's data store in
  # if install mode is kubernetes: it means which namespace dory service will deploy in
  namespace: "dory"
  {{- if eq $.mode "kubernetes" }}
  # set which nodes will dory services deploy in, corresponding to kubernetes' nodeSelector settings
  # example: "type: master"
  nodeSelector: {}
  {{- end }}
  # git repository settings
  gitRepo:
    # git repository type, options: gitea, gitlab
    # gitea support arm64 cpu architecture
    # gitlab not support arm64 cpu architecture
    type: gitea
    # deploy git repository automatically (internal or external only accept one deploy way)
    internal:
      # git repository image name
      image: gitea/gitea:1.16.5
      # git repository database image name, if type is gitea this setting required
      imageDB: mysql:8.0.20
      # expose service port (kubernetes node port)
      port: 30001
    # # use external git repository, do not deploy git repository automatically (internal or external only accept one deploy way)
    # external:
    #   # git repository browser access url
    #   viewUrl: http://192.168.0.1:30001
    #   # git repository internal access url by dory
    #   url: http://192.168.0.1:30001
    #   # git repository admin user name
    #   username: "PLEASE_INPUT_BY_MANUAL"
    #   # git repository admin user display name
    #   name: "PLEASE_INPUT_BY_MANUAL"
    #   # git repository admin user mail
    #   mail: "PLEASE_INPUT_BY_MANUAL"
    #   # git repository admin user password
    #   password: "PLEASE_INPUT_BY_MANUAL"
    #   # git repository admin user token
    #   token: "PLEASE_INPUT_BY_MANUAL"
    #   # dory URL callback by git repository webhook
    {{- if eq $.mode "docker" }}
    #   gitWebhookUrl: "http://10.2.0.10:30010"
    {{- else if eq $.mode "kubernetes" }}
    #   gitWebhookUrl: "http://10.1.0.2:30010"
    {{- end }}
  # artifact and dependency repository settings, not support arm64 cpu architecture
  artifactRepo:
    # artifact and dependency repository type, options: nexus
    type: nexus
    # deploy artifact and dependency repository automatically (internal or external only accept one deploy way)
    internal:
      # artifact and dependency repository image name
      image: sonatype/nexus3:3.38.1
      # artifact and dependency repository expose service port (kubernetes node port)
      port: 30003
      # docker.io image proxy expose service port (kubernetes node port)
      portHub: 30004
      # gcr.io image proxy expose service port (kubernetes node port)
      portGcr: 30005
      # quay.io image proxy expose service port (kubernetes node port)
      portQuay: 30006
    # # use external artifact and dependency repository, do not deploy artifact and dependency repository automatically (internal or external only accept one deploy way)
    # # please use docker image: doryengine/nexus-data-init:alpine-3.15.3 directory /nexus-data/nexus data as basic nexus data
    # external:
    #   # artifact and dependency repository browser access url
    #   viewUrl: http://192.168.0.1:30003
    #   # artifact and dependency repository access url by docker executors
    #   url: http://192.168.0.1:30003
    #   # artifact and dependency repository access ip address, docker executors can connect this repository
    #   host: 192.168.0.1
    #   # artifact and dependency repository admin user name
    #   username: admin
    #   # artifact and dependency repository admin user password
    #   password: "Nexus_Pwd_321"
    #   # artifact and dependency repository proxy url with public user authorization
    #   publicAccountUrl: http://public-user:public-user@192.168.0.1:30003
    #   # public user name which can fetch public dependencies
    #   publicUser: public-user
    #   # public user password which can fetch public dependencies
    #   publicPassword: public-user
    #   # public user email which can fetch public dependencies
    #   publicEmail: public-user@139.com
    #   # artifact and dependency repository expose service port (kubernetes node port)
    #   port: 30003
    #   # docker.io image proxy expose service port (kubernetes node port)
    #   portHub: 30004
    #   # gcr.io image proxy expose service port (kubernetes node port)
    #   portGcr: 30005
    #   # quay.io image proxy expose service port (kubernetes node port)
    #   portQuay: 30006
  # openldap account center settings, dory-core use openldap to store user accounts
  openldap:
    # openldap image name
    image: osixia/openldap:develop-dev
    # ldapadmin image name, used for manage openldap
    imageAdmin: osixia/phpldapadmin:stable
    # ldapadmin expose service port (kubernetes node port)
    port: 30007
    # openldap admin password, leave it empty to random create one
    password: ""
    # openldap account domain settings
    domain: "dory.local"
    # openldap baseDN settings
    baseDN: "dc=dory,dc=local"
  # dory-core service deploy settings
  dorycore:
    # dory-dashboard expose service port (kubernetes node port)
    port: 30010
  # redis cache settings
  redis:
    # redis cache image name
    image: redis:6.2.6-alpine3.15
    # redis cache password, leave it empty to random create one
    password: ""
  # mongodb settings
  mongo:
    # mongodb image name
    image: mongo:4.4.13-focal
    # mongodb password, leave it empty to random create one
    password: ""
  # docker executors deploy settings
  docker:
    # docker executor image name
    image: docker:20.10.14-dind
    # service name of docker executor (in docker-compose or kubernetes)
    dockerName: docker
    # how many docker executors will deploy in docker-compose or with kubernetes
    dockerNumber: 2
# image repository settings, not support arm64 cpu architecture
imageRepo:
  # image repository type, options: harbor
  type: harbor
  # deploy image repository automatically (internal or external only accept one deploy way)
  internal:
    # image repository domain name, used for create image repository self signed certificates
    domainName: harbor.dory.local
    # which namespace will image repository deploy in
    # if install mode is docker: it means which subdirectory image repository's data store in
    # if install mode is kubernetes: it means which namespace image repository will deploy in
    namespace: harbor
    # image repository (harbor) version, support v2.2.x - v2.4.x
    version: v2.4.2
    # image repository admin user password, leave it empty to random create one
    password: ""
    {{- if eq $.mode "docker" }}
    # which subdirectory image repository self signed certificates store in
    # if install mode is docker: required
    certsDir: certs
    # which subdirectory image repository data store in
    # if install mode is docker: required
    dataDir: data
    {{- end }}
  # # use external image repository, do not deploy image repository automatically (internal or external only accept one deploy way)
  # external:
  #   # image repository ip address
  #   ip: 192.168.0.1
  #   # image repository browser access url
  #   viewUrl: https://harbor.dory.local
  #   # image repository domain name
  #   url: harbor.dory.local
  #   # image repository admin user name
  #   username: admin
  #   # image repository admin user password
  #   password: "PLEASE_INPUT_BY_MANUAL"
  #   # image repository admin user email
  #   email: "admin@example.com"
  #   # image repository api access url by dory
  #   apiUrl: https://harbor.dory.local
# dorycore application settings
dorycore:
  # admin user settings
  adminUser:
    # admin user name, format like: dory-admin
    username: dory-admin
    # admin user display name, format like: DORY-ADMIN
    name: DORY-ADMIN
    # admin user mail
    mail: dory-admin@139.com
    # admin user mobile phone number
    mobile: 13812341234
  # smtp send mail settings
  mail:
    # smtp server host
    host: "smtp.139.com"
    # smtp port
    port: 25
    # smtp user account
    username: "13812341234@139.com"
    # smtp password
    password: "13812341234"
    # smtp enable SSL
    ssl: false
    # smtp sender display name
    from: "DORY-ADMIN <13812341234@139.com>"
# kubernetes environment settings, which project applications will deploy in
kubernetes:
  # kubernetes api server ip address
  host: "10.1.0.2"
  # kubernetes api server port
  port: 6443
  # kubernetes api server admin token
  token: "xxx"

  # # if kubernetes cluster persistent volume use local storage, please set it, otherwise remove it
  # pvConfigLocal:
  #   # local path (absolute path)
  {{- if eq $.mode "kubernetes" }}
  #   # the same as `rootDir` settings
  {{- end }}
  #   localPath: "/data/k8s-vols/dory"

  # if kubernetes cluster persistent volume use nfs shared storage, please set it, otherwise remove it
  pvConfigNfs:
    # nfs storage path (absolute path)
    {{- if eq $.mode "kubernetes" }}
    # this path is the nfs server path, not nfs mount path, relative to `rootDir` settings
    {{- end }}
    nfsPath: "/data/nfs-vols/k8s-vols/dory"
    # nfs server ip address
    nfsServer: "10.2.0.10"

  # # if kubernetes cluster persistent volume use cephfs shared storage, please set it, otherwise remove it
  # pvConfigCephfs:
  #   # cephfs storage path (absolute path)
  {{- if eq $.mode "kubernetes" }}
  #   # this path is the cephfs server path, not cephfs mount path, relative to `rootDir` settings
  {{- end }}
  #   cephPath: "/k8s-vols/dory"
  #   # ceph connect account
  #   cephUser: admin
  #   # ceph connect secret
  #   cephSecret: "xxx"
  #   # ceph monitors ip address
  #   cephMonitors:
  #   - "192.168.0.1:6789"
  #   - "192.168.0.2:6789"
  #   - "192.168.0.3:6789"
