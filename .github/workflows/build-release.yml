name: Go

on:
  push:
    tags:
    - "*"

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step_version.outputs.version }}
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}

    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
          - goarch: amd64
            goos: windows
    steps:
      - id: step_version
        run: echo "::set-output name=version::${{ steps.package_version.outputs.version }}"
      - id: step_upload_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Making doryctl
        working-directory: .
        run: go mod tidy && go build -o doryctl
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - name: Packaging...
        working-directory: .
        run: tar czvf doryctl-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref }}.tgz doryctl LICENSE && echo "doryctl-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref }}.tgz"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Uploading Release assets...
        if: ${{ !env.ACT }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./doryctl-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_name: doryctl-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_content_type: application/gzip
